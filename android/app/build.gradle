def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion '21.3.6528147'


    lintOptions {
//        disable 'InvalidPackage'
//        disable "Instantiatable"
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com"
        minSdkVersion 22
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndk {
            //abiFilters "armeabi-v7a"//for website
            //abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86','x86_64'//for debug
        }


    }

    signingConfigs {
        liveConfig {
            Properties keystore_properties = new Properties()
            //for google playstore
          //  keystore_properties.load(project.rootProject.file('keystore/keystore.properties').newDataInputStream())
// to load properties
            //for website
            keystore_properties.load(project.rootProject.file('keystoreweb/keystore.properties').newDataInputStream())
// to load properties

            keyAlias keystore_properties.getProperty("KEY_ALIAS")
            keyPassword keystore_properties.getProperty("KEY_PASSWORD")
            storeFile new File(rootDir, keystore_properties.getProperty("STORE_PATH"))
            storePassword keystore_properties.getProperty("STORE_PASSWORD")
        }
    }


    /*  buildTypes {
          release {
              // TODO: Add your own signing config for the release build.
              // Signing with the debug keys for now, so `flutter run --release` works.
              signingConfig signingConfigs.debug
              shrinkResources false
              minifyEnabled false
              //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
              //multiDexEnabled = true
          }
      }*/

    buildTypes {
        releaseStaging {
            shrinkResources false
            minifyEnabled false
            matchingFallbacks = ['release']
            signingConfig signingConfigs.liveConfig
        }


        release {
            //    minifyEnabled enableProguardInReleaseBuilds
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.liveConfig

        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def buildDate = new Date().format("dd_MM_yyyy")
            def buildType = variant.getBuildType().name
            def flavorName = variant.flavorName
            def appName = "${"gmng"}_${flavorName}_v${defaultConfig.getVersionCode()}_${buildDate}-${buildType}.apk"

            outputFileName = appName
        }
    }


    dataBinding {
        enabled = true
    }

    flavorDimensions "default"
    productFlavors {
        production {
            dimension "default"
            resValue "string", "app_name", "GMNG"
            applicationIdSuffix ".gmng"
            versionCode 79
            versionName "2.0.49"
        }
        staging {
            dimension "default"
            resValue "string", "app_name", "GMNG staging"
            applicationIdSuffix ".gmng.staging"
            versionCode 79
            versionName "2.0.49"
        }
        playstore {
            dimension "default"
            resValue "string", "app_name", "GMNG Esports"
            applicationIdSuffix ".gmng.esport"
            versionCode 39
            versionName "2.0.29"
        }
    }
}

flutter {
    source '../..'
}

configurations { natives }
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //implementation 'com.clevertap.android:clevertap-android-sdk:4.4.0'
    implementation 'com.clevertap.android:clevertap-android-sdk:3.8.2'
    implementation 'com.google.firebase:firebase-messaging:21.0.0'
    implementation 'androidx.core:core:1.3.0'
    implementation 'androidx.fragment:fragment:1.3.6'
    implementation 'androidx.fragment:fragment-ktx:1.3.0'
    implementation 'androidx.multidex:multidex:2.0.1'
//MANDATORY for App Inbox
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'

//For CleverTap Android SDK v3.6.4 and above add the following -
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation 'com.google.firebase:firebase-analytics'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha02'
    implementation 'com.tbuonomo:dotsindicator:4.2'
    implementation "com.airbnb.android:lottie:3.5.0"
//Android Fast Networking (implementation call)
    api "com.amitshekhar.android:android-networking:1.0.2"
    api "com.amitshekhar.android:rx2-android-networking:1.0.2"
    implementation("io.socket:socket.io-client:1.0.0") {
// excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
//paging
    implementation "android.arch.paging:runtime:2.1.0"
    implementation "androidx.paging:paging-rxjava2:2.1.2"
    implementation "com.jakewharton:butterknife:10.2.1"
//    kapt "com.jakewharton:butterknife-compiler:10.2.1"
//RX Java
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation "io.reactivex.rxjava2:rxjava:2.1.8"
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'
//epoxy
    implementation "com.airbnb.android:epoxy:4.1.0"
    implementation "com.airbnb.android:epoxy-databinding:4.1.0"
//    kapt "com.airbnb.android:epoxy-processor:4.1.0"
    implementation "com.airbnb.android:epoxy-paging:4.1.0"
//glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
//LibGDX
    implementation "com.badlogicgames.gdx:gdx-backend-android:1.9.8"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:1.9.8:natives-x86_64"
    implementation "com.badlogicgames.gdx:gdx-freetype:1.9.8"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.9.8:natives-armeabi"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.9.8:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.9.8:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.9.8:natives-x86"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:1.9.8:natives-x86_64"
    //LoganSquare for Parsing
    implementation 'com.bluelinelabs:logansquare:1.3.7' // LoganSquare runtime

    //kapt 'com.bluelinelabs:logansquare-compiler:1.3.7'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.3' // Dependency of

    //kapt 'com.fasterxml.jackson.core:jackson-core:2.9.3'
    //Gson
    implementation "com.google.code.gson:gson:2.8.6"

    implementation 'com.facebook.android:facebook-android-sdk:latest.release'

    //Tooltip
    implementation "com.github.skydoves:balloon:1.2.4"

    //unityLibrary
    implementation project(path: ':unityLibrary')
    implementation 'com.parse.bolts:bolts-applinks:1.4.0'
    implementation "androidx.test:core:1.4.0"

    implementation 'com.android.support:multidex:1.0.3'
    //for clevertap in native poker
    implementation 'com.appsflyer:af-android-sdk:6.9.0'//for appsflyer in native poker

    //implementation project(path: ':RDL_SDK')
   implementation('com.gl:glg_rummy:1.0')
    api project(':glg_rummy_lib:platform_module')
    //pocket 52
    implementation files('libs/poker-sdk-v1.8.1.aar')
    implementation 'com.cashfree.pg:android-sdk:1.7.28'
    //implementation files('libs/poker-sdk-v1.6.4.aar')
    //implementation files('libs/poker-sdk-v1.7.1.aar')

}
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
